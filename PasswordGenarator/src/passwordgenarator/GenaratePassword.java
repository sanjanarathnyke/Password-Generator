/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package passwordgenarator;

import java.util.Random;

/**
 *
 * @author User
 */
public class GenaratePassword extends javax.swing.JFrame {

    /**
     * Creates new form GenaratePassword
     */
    public GenaratePassword() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jDesktopPane2 = new javax.swing.JDesktopPane();
        tfpwd = new javax.swing.JTextField();
        cmblenght = new javax.swing.JComboBox<>();
        chkupper = new javax.swing.JCheckBox();
        chklower = new javax.swing.JCheckBox();
        chksymbol = new javax.swing.JCheckBox();
        btngenarate = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jDesktopPane2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        jDesktopPane2.add(tfpwd, new org.netbeans.lib.awtextra.AbsoluteConstraints(217, 57, 322, -1));

        cmblenght.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "8", "12" }));
        jDesktopPane2.add(cmblenght, new org.netbeans.lib.awtextra.AbsoluteConstraints(269, 131, 256, -1));

        chkupper.setFont(new java.awt.Font("Source Code Pro", 1, 14)); // NOI18N
        chkupper.setForeground(new java.awt.Color(255, 204, 102));
        chkupper.setText("uppercase");
        jDesktopPane2.add(chkupper, new org.netbeans.lib.awtextra.AbsoluteConstraints(52, 212, -1, -1));

        chklower.setFont(new java.awt.Font("Source Code Pro", 1, 14)); // NOI18N
        chklower.setForeground(new java.awt.Color(255, 204, 102));
        chklower.setText("lowercase");
        jDesktopPane2.add(chklower, new org.netbeans.lib.awtextra.AbsoluteConstraints(52, 252, 125, -1));

        chksymbol.setFont(new java.awt.Font("Source Code Pro", 1, 14)); // NOI18N
        chksymbol.setForeground(new java.awt.Color(255, 204, 102));
        chksymbol.setText("symbol");
        jDesktopPane2.add(chksymbol, new org.netbeans.lib.awtextra.AbsoluteConstraints(52, 293, -1, -1));

        btngenarate.setText("genarate");
        btngenarate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btngenarateActionPerformed(evt);
            }
        });
        jDesktopPane2.add(btngenarate, new org.netbeans.lib.awtextra.AbsoluteConstraints(417, 292, -1, -1));

        jLabel1.setFont(new java.awt.Font("Source Code Pro", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 153, 102));
        jLabel1.setText("Choose lenght");
        jDesktopPane2.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(143, 133, -1, -1));

        jLabel2.setFont(new java.awt.Font("Segoe UI Light", 2, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 102));
        jLabel2.setText("Genarated Password Is Here");
        jDesktopPane2.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(14, 57, 191, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jDesktopPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 578, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jDesktopPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 365, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btngenarateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btngenarateActionPerformed
        int length = Integer.parseInt((String) cmblenght.getSelectedItem());  // Get password length
        boolean includeLower = chklower.isSelected();
        boolean includeSymbols = chksymbol.isSelected();
        boolean includeUpper = chkupper.isSelected();

        // Generate the password and display it
        String password = generateRandomPassword(length, includeLower, includeSymbols, includeUpper);
        tfpwd.setText(password);  // Set the generated password in the text field
    }//GEN-LAST:event_btngenarateActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GenaratePassword.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GenaratePassword.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GenaratePassword.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GenaratePassword.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GenaratePassword().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btngenarate;
    private javax.swing.JCheckBox chklower;
    private javax.swing.JCheckBox chksymbol;
    private javax.swing.JCheckBox chkupper;
    private javax.swing.JComboBox<String> cmblenght;
    private javax.swing.JDesktopPane jDesktopPane2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JTextField tfpwd;
    // End of variables declaration//GEN-END:variables

    private String generateRandomPassword(int length, boolean includeLower, boolean includeSymbols, boolean includeUpper) {

        // Define character sets for password
        String lowercase = "abcdefghijklmnopqrstuvwxyz";
        String symbols = "!@#$%^&*()_+[]{}|;:,.<>?";
        String uppercase = "ABCDEFGHIJKLMNOPQRSTUVWXYZ";
        StringBuilder characterPool = new StringBuilder(lowercase);

 
        if (includeLower) {
            characterPool.append(lowercase);
        }
        if (includeSymbols) {
            characterPool.append(symbols);
        }
        if (includeUpper) {
            characterPool.append(uppercase);
        }

    
        Random random = new Random();
        StringBuilder password = new StringBuilder();

        // Generate password of the specified length
        for (int i = 0; i < length; i++) {
            int randomIndex = random.nextInt(characterPool.length());
            password.append(characterPool.charAt(randomIndex));
        }

        return password.toString();  // Return the generated password

    }
}
